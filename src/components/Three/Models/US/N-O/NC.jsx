/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useCallback, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useActiveStates } from '../../../../../context/State/StateCtx';

export default function NC({ ...props }) {
  const [isHovered, setIsHovered] = useState(false);
  const [positionY, setPositionY] = useState(0.1);
  const [scaleY, setScaleY] = useState();
  const [active, setActive] = useState(false);
  const { setActiveStates } = useActiveStates([]);
  const group = useRef()

  const onHover = useCallback((e, value) => {
    e.stopPropagation(); //stop ref at first intersection
    e.target;
    setIsHovered(value);
    // isHovered = true
  }, [setIsHovered]);

  function handleClick() {
    setActive(v => !v);
    active ? setPositionY(0.1) :
    setPositionY(0);
    setPositionY(2);
    setActiveStates((prevState) => {
      return [ ...prevState, 'NC' ];
    });
  }

  const { nodes, materials } = useGLTF('/models/nc/NorthCarolina.glb')
  return (
    <mesh 
      geometry={nodes.Plane072.geometry} 
      material={materials['Material.001']} 
      position={[7.83, positionY, 0]}
      scale={[1, 1, 1]}
      onPointerOver={e => onHover(e, true)} 
      onPointerOut={e => onHover(e, false)}
      onClick={() => handleClick()} 
    >
      {/* <meshStandardMaterial
            color = {isHovered? '#fff' : '#399E5A'}
        /> */}
      </mesh>
  )
}

useGLTF.preload('models/nc/NorthCarolina.glb')